[{"/home/avinash/Documents/ECE/ProjectManagerFront-ECE/src/index.js":"1","/home/avinash/Documents/ECE/ProjectManagerFront-ECE/src/serviceWorker.js":"2","/home/avinash/Documents/ECE/ProjectManagerFront-ECE/src/App.js":"3","/home/avinash/Documents/ECE/ProjectManagerFront-ECE/src/Login/Login.js":"4","/home/avinash/Documents/ECE/ProjectManagerFront-ECE/src/Login/SignIn.js":"5","/home/avinash/Documents/ECE/ProjectManagerFront-ECE/src/Home/Home.js":"6","/home/avinash/Documents/ECE/ProjectManagerFront-ECE/src/Login/SignUp.js":"7","/home/avinash/Documents/ECE/ProjectManagerFront-ECE/src/Pages/HomeView.js":"8","/home/avinash/Documents/ECE/ProjectManagerFront-ECE/src/Pages/GitlabCredView.js":"9","/home/avinash/Documents/ECE/ProjectManagerFront-ECE/src/Pages/AdminView.js":"10"},{"size":501,"mtime":1609271600662,"results":"11","hashOfConfig":"12"},{"size":4951,"mtime":1574632838000,"results":"13","hashOfConfig":"12"},{"size":861,"mtime":1608834648780,"results":"14","hashOfConfig":"12"},{"size":1923,"mtime":1609333770918,"results":"15","hashOfConfig":"12"},{"size":7557,"mtime":1609338365320,"results":"16","hashOfConfig":"12"},{"size":9039,"mtime":1609335029421,"results":"17","hashOfConfig":"12"},{"size":5676,"mtime":1609267076020,"results":"18","hashOfConfig":"12"},{"size":911,"mtime":1609333737018,"results":"19","hashOfConfig":"12"},{"size":4055,"mtime":1609335037725,"results":"20","hashOfConfig":"12"},{"size":408,"mtime":1609333770950,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"1rt4k7u",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"24"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"24"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":1,"source":"37","usedDeprecatedRules":"24"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"24"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"/home/avinash/Documents/ECE/ProjectManagerFront-ECE/src/index.js",[],["48","49"],"/home/avinash/Documents/ECE/ProjectManagerFront-ECE/src/serviceWorker.js",[],"/home/avinash/Documents/ECE/ProjectManagerFront-ECE/src/App.js",["50","51","52","53","54"],"import React, {Component, useState} from 'react';\n\nimport './App.css';\n\nimport { Button, FormGroup, FormControl, FormLabel } from \"react-bootstrap\";\nimport \"./Login/Login.css\";\nimport Login from \"./Login/Login\";\n\n\n\n\n\nclass App extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            is_connected: false,\n        }\n\n    }\n    connexion = () => {\n        this.setState({is_connected: !this.state.is_connected});\n    }\n\n    /*<header className=\"App-header\">\n            <img src={logo} className=\"App-logo\" alt=\"logo\" />\n            <h1 className=\"App-title\">Welcome to React</h1>\n          </header>*/\n        render() {\n\n                return (\n                    <div className=\"App\"><Login connexion={this.connexion.bind(this)}/>\n                    </div>\n                );\n\n        }\n}\n\nexport default App;\n","/home/avinash/Documents/ECE/ProjectManagerFront-ECE/src/Login/Login.js",["55","56","57","58","59","60"],"import React, {\n    Component, useState\n} from 'react';\nimport {Button, FormControl, FormGroup, FormLabel} from \"react-bootstrap\";\nimport \"./Login.css\";\nimport SignIn from \"./SignIn\";\nimport SignUp from \"./SignUp\";\nimport Home from \"../Home/Home\";\nimport {BrowserRouter as Router, Switch, Route, Link, Redirect} from \"react-router-dom\";\nimport '../bootstrap/dist/css/bootstrap.min.css';\nimport AWSlogo from '../Ressources/awslogo.png';\nclass Login extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isSignin: true,\n            is_connected: false,\n        }\n    }\n\n\n\n    hello = () => {\n        this.setState({isSignin: !this.state.isSignin});\n\n    }\n    connexion = () => {\n        this.setState({is_connected: !this.state.is_connected});\n    }\n\n    render() {\n        if (this.state.is_connected) {\n                   return( <Home disconnexion={this.connexion} />);\n        } else {\n\n            return (\n                <div className=\"App-header App-content Login\">\n                    <Router>\n                        <div>\n                            <Switch>\n                                <Route path=\"/\" exact component={(props) => <SignIn{...props} connexion={this.connexion}/>} />\n                                <Route path=\"/SignIn\" component={(props) => <SignIn{...props} connexion={this.connexion}/>} />\n                                <Route path=\"/SignUp\" component={SignUp}/>\n                            </Switch>\n                            <Redirect exact from=\"/\" to=\"/SignIn\" />\n\n                        </div>\n                    </Router>\n\n                    <p style={{fontSize:'1rem', marginTop:'2%'}}> Identity managed by &nbsp;<img style={{width:'15%'}} src={AWSlogo} alt=\"Logo\" /></p>\n                    <p style={{fontSize:'1rem'}}>Avinash & Joris </p>\n                </div>\n\n\n\n            );\n\n\n        }\n    }\n}\n\n\nexport default Login;\n","/home/avinash/Documents/ECE/ProjectManagerFront-ECE/src/Login/SignIn.js",["61","62"],"/home/avinash/Documents/ECE/ProjectManagerFront-ECE/src/Home/Home.js",["63","64","65","66","67","68","69","70","71","72","73"],"import React, {\n    Component, useState\n} from 'react';\nimport {Button, FormControl, FormGroup, FormLabel} from \"react-bootstrap\";\nimport {Navbar, Nav, NavDropdown, Card} from 'react-bootstrap'\nimport Col from \"react-bootstrap/Col\";\n\nimport Toast from \"react-bootstrap/Toast\";\nimport '../bootstrap/dist/css/bootstrap.min.css';\nimport 'react-notifications/lib/notifications.css';\nimport {NotificationContainer, NotificationManager} from 'react-notifications';\nimport ButtonToolbar from \"react-bootstrap/ButtonToolbar\";\nimport { BrowserRouter as Router, Link, Route, Switch} from \"react-router-dom\";\nimport GitlabCredView from \"../Pages/GitlabCredView\";\nimport HomeView from \"../Pages/HomeView\";\nimport AdminView from \"../Pages/AdminView\";\nimport {Redirect} from \"react-router\";\n\nclass Home extends Component {\n\n    constructor(props) {\n//http://localhost:3001\n\n        super(props);\n        this.hostname = 'https://ece-projectmanager-back.herokuapp.com'\n        //this.hostname = 'http://localhost:3001'\n        this.disconnect = this.disconnect.bind(this);\n        this.gitlabKeyAdded = this.gitlabKeyAdded.bind(this);\n        this.getRepolist = this.getRepolist.bind(this);\n        this.userInfo = \"\";\n        this.state = {\n            userInfo : \"\",\n            gitlabKey: \"\",\n            isGitlabConnected : false,\n            userPayload:\"\",\n            balance : \"\",\n            showA : true,\n            redirect: false,\n\n            gitlab_public:[],\n            gitlab_ece:[],\n\n\n        };\n\n    }\n\n    toggleShowA  = () => {\n        this.setState({showA: !this.state.showA});\n    }\n\n\n\n    disconnect() {\n        localStorage.clear();\n        this.setState({redirect: true});\n        window.location.reload(false);\n\n\n    }\n\n\n    getRepolist(){\n        NotificationManager.info('','Loading projects ...', 2000);\n        fetch(this.hostname+'/all_repolist_gitlab', {\n            method: 'POST',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n            },\n            body:JSON.stringify({\n                gitlabKey: this.state.gitlabKey,\n            })\n        }).then(res => res.json()).then(\n            (result) => {\n                //console.log(result);\n                let projects = [];\n                for (let i = 0; result.length > i; i++){\n                        projects.push(result[i].name)\n                }\n                console.log(projects);\n                this.setState({ gitlab_public: projects})\n            },\n            (error) => {\n                console.log(\"error\");\n                console.log(error);\n                NotificationManager.error('', 'Cannot acces to Gitlab', 5000);\n            }\n        )\n\n\n        fetch(this.hostname+'/ece_repolist_gitlab', {\n            method: 'POST',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n            },\n            body:JSON.stringify({\n                gitlabKey: this.state.gitlabKey,\n            })\n        }).then(res => res.json()).then(\n            (result) => {\n                //console.log(result);\n                let projects = [];\n                for (let i = 0; result.length > i; i++){\n                    projects.push(result[i].name)\n                }\n                console.log(projects);\n                this.setState({ gitlab_ece: projects})\n\n\n            },\n            (error) => {\n                console.log(\"error\");\n                console.log(error);\n                NotificationManager.error('', 'Cannot acces to Gitlab', 5000);\n            }\n        )\n        setTimeout(this.getRepolist, 20000);\n    }\n    gitlabKeyAdded(gitlabKey, isConnected){\n\n        this.setState({ gitlabKey: gitlabKey })\n        this.setState({ isGitlabConnected: isConnected })\n\n    if (gitlabKey === 'error'){\n        NotificationManager.error('', 'Wrong gitlab Token', 3000);\n        }else {\n    if (isConnected) {\n        NotificationManager.success(this.state.gitlabKey, 'Gitlab connected', 3000);\n        this.getRepolist();\n    } else {\n        NotificationManager.warning('', 'Gitlab token deleted', 5000);\n    }\n\n}\n\n    }\n    componentDidMount() {\n\n        this.setState({redirect: false});\n\n\n        fetch(this.hostname+'/getUser',  {\n            method: 'POST',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n                'access_token':localStorage.getItem('access_token'),\n            }\n        })   .then(res => res.json())\n            .then((data) => {\n                console.log('UserInfo !');\n                this.setState({ userInfo: data })\n                this.setState({ userPayload:  JSON.parse(localStorage.getItem('payload'))})\n                NotificationManager.info('','Welcome '+this.state.userInfo.Username, 5000);\n\n                console.log(this.state);\n                let result = this.state.userInfo.UserAttributes.map(a => a.Name);\n                console.log(result)\n                if (result.includes(\"custom:access_token_gitlab\")){\n                    console.log(\"There is key\")\n\n                    this.setState({ gitlabKey: this.state.userInfo.UserAttributes.find(x=>x.Name === \"custom:access_token_gitlab\").Value })\n                    this.setState({isGitlabConnected : true})\n                    this.getRepolist();\n\n                    NotificationManager.success(this.state.gitlabKey,'Gitlab connected', 5000);\n\n                }else{\n                    NotificationManager.warning('','Please add your Gitlab Token to start', 20000);\n\n                }\n\n\n            })\n            .catch(console.log)\n    }\n\n    render() {\n        const { redirect } = this.state;\n\n        if (this.state.redirect) {\n            return (\n                <Router>\n                    <Redirect exact from=\"/\" to='/SignIn'/>\n                </Router>);\n        }\n\n\n            return (\n                <div className=\"App-header\">\n\n                    <Router>\n                        <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\n\n                                <Navbar.Brand>ECE Project Manager</Navbar.Brand>\n\n\n                            <Navbar.Toggle aria-controls=\"responsive-navbar-nav\"/>\n                            <Navbar.Collapse id=\"responsive-navbar-nav\">\n                                <Nav className=\"mr-auto\">\n                                    <ButtonToolbar>\n                                        <Link to={\"/Pages/HomeView\"}>\n                                            <Button  className=\"NavButton\" >Repositories</Button>\n                                        </Link>\n                                        <Link to={\"/Pages/GitlabCredView\"}>\n                                            <Button  className=\"NavButton\" >Gitlab Token</Button>\n                                        </Link>\n                                        {this.state.userInfo.Username == 'admin' ?\n                                            <Link to={\"/Pages/AdminView\"}>\n                                                <Button className=\"NavButton\">Admin settings</Button>\n                                            </Link>: ''\n                                        }\n\n                                    </ButtonToolbar>\n\n                                </Nav>\n                                <Nav>\n\n                                    <Navbar.Text>\n                                        Signed in as : <a href=\"#login\"> &nbsp;{this.state.userInfo.Username} </a>\n                                    </Navbar.Text>\n                                </Nav>\n                                <Nav><ButtonToolbar>\n                                    <Button className=\"NavButton\" onClick={this.disconnect}>Disconnect </Button>\n                                </ButtonToolbar>\n                                </Nav>\n                            </Navbar.Collapse>\n                        </Navbar>\n\n\n                        <div>\n\n\n\n                            {this.state.redirect  ?  <Redirect to=\"/sign-in\"/> :\n\n                            <div>\n\n                                <Switch>\n\n\n                                    <Route path=\"/Pages/HomeView\" component={(props) => <HomeView{...props} gitlab_public={this.state.gitlab_public} gitlab_ece={this.state.gitlab_ece} />} />\n                                    <Route path=\"/Pages/GitlabCredView\" component={(props) => <GitlabCredView{...props}  gitlabKey={this.state.gitlabKey} gitlabKeyAdded={this.gitlabKeyAdded} user={this.state.userInfo}  />} />\n                                    <Route path=\"/Pages/AdminView\" component={(props) => <AdminView{...props}    />} />\n                                </Switch>\n                                <Redirect exact from=\"/\" to=\"/Pages/HomeView\" />\n\n                            </div>\n}\n\n\n                        </div>\n                    </Router>\n                    <NotificationContainer/>\n                </div>\n\n            );\n    }\n}\n\n\n\nexport default Home;\n","/home/avinash/Documents/ECE/ProjectManagerFront-ECE/src/Login/SignUp.js",["74"],"import React, {\n    Component, useState\n} from 'react';\nimport {Button, FormControl, FormGroup, FormLabel} from \"react-bootstrap\";\n\nclass SignUp extends Component {\n\n    constructor(props) {\n        super(props);\n        this.subscribe = this.subscribe.bind(this);\n        this.state = {\n            count: 0,\n            first_name:\"\",\n            last_name:\"\",\n            email: \"\",\n            password: \"\",\n            isChecked : false,\n            state: '',\n            isLoaded: true,\n            items: null,\n\n\n        };\n\n    }\n\n    subscribe() {\n        console.log(this.state.isChecked);\n\n        fetch('http://localhost:8000/v1/users',  {\n            method: 'POST',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({\n                last_name: this.state.last_name,\n                first_name: this.state.first_name,\n                email: this.state.email,\n                password: this.state.password,\n                is_admin: this.state.isChecked\n            })\n        }).then(res => res.json())\n            .then(\n                (result) => {\n\n                  console.log(\"Account created\");\n                  console.log(result);\n                    // this.handleToUpdate('someVar');\n                },\n                (error) => {\n                    console.log(\"error\");\n                    this.setState({\n                        isLoaded: false,\n                    });\n                    console.log(error);\n                }\n            )\n\n    }\n\n\n    toggleChange = () => {\n        this.setState({\n            isChecked: !this.state.isChecked,\n        });\n    }\n\n    validateForm() {\n        return  this.state.email.length > 0 &&  this.state.password.length > 0\n            && this.state.last_name.length > 0 && this.state.first_name.length > 0;\n    }\n\n    handleSubmit(event) {\n        event.preventDefault();\n    }\n\n\n    login() {\n        console.log(this.state.email);\n\n        fetch('http://localhost:8000/v1/users',  {\n            method: 'POST',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({\n                first_name: this.state.first_name,\n                last_name: this.state.last_name,\n                email: this.state.email,\n                password: this.state.password,\n                is_admin: false\n\n            })\n        }).then(res => res.json())\n            .then(\n                (result) => {\n                    console.log(result);\n                    this.setState({\n                        isLoaded: true,\n                        items: result.items\n                    });\n                    console.log(this.state.isLoaded);\n                    this.handleToUpdate('someVar');\n                },\n                (error) => {\n                    console.log(\"error\");\n                    this.setState({\n                        isLoaded: false,\n                    });\n                    console.log(error);\n                }\n            )\n        console.log(this.state.isLoaded);\n    }\n    handleToUpdate = (someArg) => {\n        alert('We pass argument from Child to Parent: ' + someArg);\n    }\n\n    render() {\n        return(\n            <div className=\"\">\n\n                <form border border-dark  onSubmit={this.handleSubmit}>\n                    <FormGroup controlId=\"first_name\" >\n                        <FormLabel>First name</FormLabel>\n                        <FormControl\n                            autoFocus\n                            type=\"text\"\n                            value={this.state.first_name}\n                            onChange={e => this.setState({first_name : e.target.value})}\n                        />\n                    </FormGroup>\n                    <FormGroup controlId=\"last_name\" >\n                        <FormLabel>Last Name</FormLabel>\n                        <FormControl  type=\"text\"\n                                       value={this.state.last_name}\n                                       onChange={e => this.setState({last_name : e.target.value})} />\n                    </FormGroup>\n                    <FormGroup controlId=\"email\" >\n                        <FormLabel>Email</FormLabel>\n                        <FormControl\n                            autoFocus\n                            type=\"email\"\n                            value={this.state.email}\n                            onChange={e => this.setState({email : e.target.value})}\n                        />\n                    </FormGroup>\n                    <FormGroup controlId=\"password\">\n                        <FormLabel>Password</FormLabel>\n                        <FormControl\n                            value={this.state.password}\n                            onChange={e => this.setState({password : e.target.value})}\n                            type=\"password\"\n                        />\n                    </FormGroup>\n                    <FormGroup controlId=\"formBasicCheckbox\">\n\n                        <FormLabel>Admin</FormLabel>\n\n                        <FormControl  type=\"checkbox\"\n                                     checked={this.state.isChecked}\n                                     onChange={this.toggleChange}/>\n\n\n\n                    </FormGroup>\n                    <Button block className=\"btn btn-warning\"  disabled={!this.validateForm()} onClick={this.subscribe} type=\"submit\">\n                        Submit\n                    </Button>\n\n                </form>\n            </div> );\n    }\n}\n\nexport default SignUp;","/home/avinash/Documents/ECE/ProjectManagerFront-ECE/src/Pages/HomeView.js",[],"/home/avinash/Documents/ECE/ProjectManagerFront-ECE/src/Pages/GitlabCredView.js",["75"],"import React, {\n    Component, useState\n} from 'react';\nimport {Button, FormControl, FormGroup, FormLabel} from \"react-bootstrap\";\n\nimport GITLABlogo from \"../Ressources/gitlab-logo.png\";\n\n\nclass GitlabCredView extends Component {\n\n\n    constructor(props) {\n\n\n        super(props);\n        this.hostname = 'https://ece-projectmanager-back.herokuapp.com'\n        //this.hostname = 'http://localhost:3001'\n        this.addGitlabKey = this.addGitlabKey.bind(this);\n        this.deleteGitlabKey = this.deleteGitlabKey.bind(this)\n        this.userInfo = \"\";\n        this.state = {\n            userInfo : \"\",\n            gitlabKey: \"\",\n            isGitlabConnected : false,\n            userPayload:\"\",\n            balance : \"\",\n            showA : true,\n            redirect: false,\n\n        };\n\n    }\n    handleSubmit(event) {\n        event.preventDefault();\n    }\n    validateForm() {\n        return  this.state.gitlabKey.length > 0 ;\n    }\n\n    deleteGitlabKey(){\n        fetch(this.hostname+'/accessToken_gitlab', {\n            method: 'DELETE',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n            },\n        }).then(\n            (result) => {\n                console.log(result);\n                this.props.gitlabKeyAdded('', false);\n\n            },\n            (error) => {\n                console.log(\"error\");\n                console.log(error);\n            }\n        )\n\n    }\n    addGitlabKey(){\n        console.log(this.state.gitlabKey)\n        fetch(this.hostname+'/accessToken_gitlab', {\n            method: 'POST',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n            },\n            body:JSON.stringify({\n                gitlabKey: this.state.gitlabKey,\n            })\n        }).then(\n            (result) => {\n                console.log(result);\n                this.props.gitlabKeyAdded(this.state.gitlabKey, true);\n            },\n            (error) => {\n                console.log(\"error\");\n                console.log(error);\n                this.props.gitlabKeyAdded('error', false);\n            }\n        )\n\n    }\n    render() {\n\n        const isConnected = this.props.gitlabKey === '' ? false : true;\n\n        if (isConnected){\n            return (\n            <div style={{marginRight:'auto',marginLeft:'auto', marginTop: '15%', width: '35%'}}>\n                <p style={{color: 'grey'}}>\n                    Personal access token already registred\n                </p>\n                <Button block className=\"btn  btn-danger\"\n                        onClick={this.deleteGitlabKey} >\n                    Delete\n                </Button>\n                <img style={{width: '45%'}} src={GITLABlogo} alt=\"Logo\"/>\n            </div>);\n        }else {\n            return (\n\n                <div style={{marginRight:'auto',marginLeft:'auto', marginTop: '15%', width: '35%'}}>\n                    {this.props.gitlabKey}\n                    {isConnected ? this.props.gitlabKey : ''}\n                    <form border border-dark onSubmit={this.handleSubmit}>\n                        <FormGroup controlId=\"token\">\n                            <FormLabel>Your personal Gitlab Token</FormLabel>\n                            <FormControl\n                                autoFocus\n                                type=\"text\"\n                                value={this.state.gitlabKey}\n                                onChange={e => this.setState({gitlabKey: e.target.value})}\n                            />\n                        </FormGroup>\n                        <Button block className=\"btn  btn-warning\" disabled={!this.validateForm()}\n                                onClick={this.addGitlabKey} type=\"submit\">\n                            Submit\n                        </Button>\n                    </form>\n\n\n                    <img style={{width: '45%'}} src={GITLABlogo} alt=\"Logo\"/>\n\n\n                </div>\n\n            );\n        }\n    }\n}\n\nexport default GitlabCredView;\n\n","/home/avinash/Documents/ECE/ProjectManagerFront-ECE/src/Pages/AdminView.js",[],{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","severity":1,"message":"81","line":1,"column":27,"nodeType":"82","messageId":"83","endLine":1,"endColumn":35},{"ruleId":"80","severity":1,"message":"84","line":5,"column":10,"nodeType":"82","messageId":"83","endLine":5,"endColumn":16},{"ruleId":"80","severity":1,"message":"85","line":5,"column":18,"nodeType":"82","messageId":"83","endLine":5,"endColumn":27},{"ruleId":"80","severity":1,"message":"86","line":5,"column":29,"nodeType":"82","messageId":"83","endLine":5,"endColumn":40},{"ruleId":"80","severity":1,"message":"87","line":5,"column":42,"nodeType":"82","messageId":"83","endLine":5,"endColumn":51},{"ruleId":"80","severity":1,"message":"81","line":2,"column":16,"nodeType":"82","messageId":"83","endLine":2,"endColumn":24},{"ruleId":"80","severity":1,"message":"84","line":4,"column":9,"nodeType":"82","messageId":"83","endLine":4,"endColumn":15},{"ruleId":"80","severity":1,"message":"86","line":4,"column":17,"nodeType":"82","messageId":"83","endLine":4,"endColumn":28},{"ruleId":"80","severity":1,"message":"85","line":4,"column":30,"nodeType":"82","messageId":"83","endLine":4,"endColumn":39},{"ruleId":"80","severity":1,"message":"87","line":4,"column":41,"nodeType":"82","messageId":"83","endLine":4,"endColumn":50},{"ruleId":"80","severity":1,"message":"88","line":9,"column":49,"nodeType":"82","messageId":"83","endLine":9,"endColumn":53},{"ruleId":"80","severity":1,"message":"81","line":2,"column":16,"nodeType":"82","messageId":"83","endLine":2,"endColumn":24},{"ruleId":"89","severity":1,"message":"90","line":124,"column":45,"nodeType":"91","messageId":"92","endLine":124,"endColumn":47},{"ruleId":"80","severity":1,"message":"81","line":2,"column":16,"nodeType":"82","messageId":"83","endLine":2,"endColumn":24},{"ruleId":"80","severity":1,"message":"86","line":4,"column":17,"nodeType":"82","messageId":"83","endLine":4,"endColumn":28},{"ruleId":"80","severity":1,"message":"85","line":4,"column":30,"nodeType":"82","messageId":"83","endLine":4,"endColumn":39},{"ruleId":"80","severity":1,"message":"87","line":4,"column":41,"nodeType":"82","messageId":"83","endLine":4,"endColumn":50},{"ruleId":"80","severity":1,"message":"93","line":5,"column":22,"nodeType":"82","messageId":"83","endLine":5,"endColumn":33},{"ruleId":"80","severity":1,"message":"94","line":5,"column":35,"nodeType":"82","messageId":"83","endLine":5,"endColumn":39},{"ruleId":"80","severity":1,"message":"95","line":6,"column":8,"nodeType":"82","messageId":"83","endLine":6,"endColumn":11},{"ruleId":"80","severity":1,"message":"96","line":8,"column":8,"nodeType":"82","messageId":"83","endLine":8,"endColumn":13},{"ruleId":"97","severity":1,"message":"98","line":144,"column":9,"nodeType":"99","messageId":"100","endLine":151,"endColumn":19,"fix":"101"},{"ruleId":"80","severity":1,"message":"102","line":181,"column":17,"nodeType":"82","messageId":"83","endLine":181,"endColumn":25},{"ruleId":"89","severity":1,"message":"103","line":210,"column":71,"nodeType":"91","messageId":"92","endLine":210,"endColumn":73},{"ruleId":"80","severity":1,"message":"81","line":2,"column":16,"nodeType":"82","messageId":"83","endLine":2,"endColumn":24},{"ruleId":"80","severity":1,"message":"81","line":2,"column":16,"nodeType":"82","messageId":"83","endLine":2,"endColumn":24},"no-native-reassign",["104"],"no-negated-in-lhs",["105"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'Button' is defined but never used.","'FormGroup' is defined but never used.","'FormControl' is defined but never used.","'FormLabel' is defined but never used.","'Link' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'NavDropdown' is defined but never used.","'Card' is defined but never used.","'Col' is defined but never used.","'Toast' is defined but never used.","no-whitespace-before-property","Unexpected whitespace before property then.","MemberExpression","unexpectedWhitespace",{"range":"106","text":"107"},"'redirect' is assigned a value but never used.","Expected '===' and instead saw '=='.","no-global-assign","no-unsafe-negation",[4527,4531],"."]